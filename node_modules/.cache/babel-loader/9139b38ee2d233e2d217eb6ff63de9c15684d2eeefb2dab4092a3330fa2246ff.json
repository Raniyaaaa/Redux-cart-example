{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const fetchCartData = () => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Fetching...',\n      message: 'Fetching cart data!'\n    }));\n    const fetchRequest = async () => {\n      const response = await fetch('https://react-cart-example-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Failed to fetch cart data!');\n      }\n      const data = await response.json();\n      dispatch(cartActions.replaceCart({\n        items: data.items || [],\n        totalQuantity: data.totalQuantity\n      }));\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Fetched cart data successfully!'\n      }));\n    };\n    try {\n      await fetchRequest();\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-cart-example-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Senting cart data failed!'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","fetchCartData","dispatch","showNotification","status","message","fetchRequest","response","fetch","ok","Error","data","json","cartActions","error","sendCartData","cart","sendRequest","method","body","JSON","stringify","actions"],"sources":["C:/Users/raniy/OneDrive/Documents/sharpnerproject/Reactprojects/Redux-cart-example/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const fetchCartData =()=>{\n  return async (dispatch)=>{\n    dispatch(\n      uiActions.showNotification({\n        status: 'pending',\n        title: 'Fetching...',\n        message: 'Fetching cart data!',\n      })\n    )\n\n    const fetchRequest= async()=>{\n      const response =await fetch('https://react-cart-example-default-rtdb.firebaseio.com/cart.json');\n      if(!response.ok){\n        throw new Error('Failed to fetch cart data!');\n      }\n      const data = await response.json();\n      dispatch(\n        cartActions.replaceCart({\n          items: data.items || [],\n          totalQuantity: data.totalQuantity,\n        })\n      )\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Fetched cart data successfully!',\n        })\n      )\n    }\n\n    try {\n      await fetchRequest();\n    }catch(error){\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Fetching cart data failed!',\n        })\n      );\n    }\n  }\n}\n\nexport const sendCartData = (cart ) => {\n  return async (dispatch) => {\n    dispatch(\n    uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!',\n    })\n  );\n  \n  const sendRequest =async() =>{\n  const response=await fetch('https://react-cart-example-default-rtdb.firebaseio.com/cart.json',\n    {\n    method:'PUT',\n    body: JSON.stringify(cart)\n    })\n    if(!response.ok){\n      throw new Error(\"Sending cart data failed!\")\n      }\n    }\n\n    try{\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!',\n        })\n      )\n    }catch (error){\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Senting cart data failed!',\n        })\n      )\n    } \n  }\n}\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}