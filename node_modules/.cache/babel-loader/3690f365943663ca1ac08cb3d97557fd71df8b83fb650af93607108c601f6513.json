{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => uiActions.showNotification({\n    status: 'pending',\n    title: 'Sending...',\n    message: 'Sending cart data!'\n  });\n  const sendRequest = async () => {\n    const response = await fetch('https://react-cart-example-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error(\"Sending cart data failed!\");\n    }\n  };\n  dispatch(uiActions.showNotification({\n    status: 'success',\n    title: 'Success!',\n    message: 'Sent cart data successfully!'\n  }));\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","uiActions","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions"],"sources":["C:/Users/raniy/OneDrive/Documents/sharpnerproject/Reactprojects/Redux-cart-example/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\n const sendCartData = (cart ) => {\n  return async (dispatch) => (\n    uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!',\n    })\n  );\n  \n  const sendRequest =async() =>{\n  const response=await fetch('https://react-cart-example-default-rtdb.firebaseio.com/cart.json',{\n    method:'PUT',\n    body: JSON.stringify(cart)\n    })\n    if(!response.ok){\n      throw new Error(\"Sending cart data failed!\")\n      }\n    }\n\n    dispatch(\n      uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!',\n      })\n    );\n  }\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}